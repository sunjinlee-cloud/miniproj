<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위의 3줄 필수로 넣기! -->

<!-- namespace에는 구현할 인터페이스의 풀 패키지 명을 넣어줘야 한다. -->
<mapper namespace="com.pet.board.model.MainBoardMapper">

	<!-- 여기서부터 sql 구문을 작성한다. id는 인터페이스에서 선언한 메서드명. ;는 생략-->
	<!-- SELECT구문은 resultType을 적고 반환받을 타입을 반드시 넣어야한다.-->
	
	<!-- 글 작성 -->
	<insert id = "write">
		INSERT INTO Board (board_num, board_title, regdate, board_content, pay, board_address, board_type, pet_num, mem_num) 
		VALUES (BOARD_SEQ.NEXTVAL , #{boardTitle}, CURRENT_TIMESTAMP , #{boardContent}, #{pay}, #{boardAddress}, #{boardType},#{petNum}, #{memNum} )
	</insert>

	<!-- 유저 정보 -->
	<select id = "getMemberInfo" resultType = "com.pet.users.model.UsersDTO">
		SELECT MEM_NICK, MEM_TYPE, MEM_ADDRESS, MEM_PHONE
		FROM MEMBER 
		WHERE MEM_NUM = #{memNum}
	</select>
	
	<!-- 동물 전체 정보 -->
	<select id = "getPetName" resultType = "com.pet.pet.model.PetDTO" >
		SELECT * 
		FROM PET
		WHERE MEM_NUM = #{memNum}
		ORDER BY PET_ISMAIN DESC
	</select>
	
	
	<!-- 메인 게시글 리스트 -->
	<select id = "getBoardList" resultType = "com.pet.board.model.BoardDTO">
		SELECT *
		FROM BOARD
		WHERE BOARD_TYPE IS NOT NULL
		ORDER BY REGDATE DESC
	</select>
	
	<select id = "getBoardListPet" resultType = "com.pet.pet.model.PetDTO">
		SELECT *
		FROM PET
	</select>
	
	    <resultMap id="BoardResultMap" type="com.pet.board.model.BoardListDTO">
        <id property="boardNum" column="BOARD_NUM" />
        <result property="boardType" column="BOARD_TYPE" />
        <result property="boardTitle" column="BOARD_TITLE" />
        <result property="regDate" column="REGDATE" />
        <result property="boardContent" column	="BOARD_CONTENT" />
        <result property="pay" column="PAY" />
        <result property="jobTaker" column="JOB_TAKER" />
        <result property="petNum" column="PET_NUM" />
        <result property="reviewContent" column="REVIEW_CONTENT" />
        <result property="reviewScore" column="REVIEW_SCORE" />
        <result property="boardImage" column="BOARD_IMAGE" />
        <result property="memNum" column="MEM_NUM" />
        <result property="boardAddress" column="BOARD_ADDRESS" />

        <!-- PET 테이블 관련 속성 추가 -->
        <result property="petName" column="PET_NAME" />
        <result property="petWeight" column="PET_WEIGHT" />
        <result property="petGender" column="PET_GENDER" />
        <result property="petAge" column="PET_AGE" />
        <result property="petIntro" column="PET_INTRO" />
        <result property="petPhoto" column="PET_PHOTO" />
        <result property="petBreed" column="PET_BREED" />
    </resultMap>

    <select id="getBoardList" resultMap="BoardResultMap">
        SELECT 
            B.*, 
            P.PET_NAME, 
            P.PET_WEIGHT, 
            P.PET_GENDER, 
            P.PET_AGE, 
            P.PET_INTRO, 
            P.PET_PHOTO
        FROM 
            BOARD B
        LEFT JOIN 
            PET P 
        ON 
            B.PET_NUM = P.PET_NUM
        WHERE 
            B.BOARD_TYPE IS NOT NULL
        ORDER BY 
            B.REGDATE DESC
    </select>


	<!-- 글 상세 -->
	<select id = "getBoard" resultType = "com.pet.board.model.BoardDTO">
		SELECT *
		FROM BOARD
		WHERE BOARD_NUM = #{boardNum}
	</select>
	
	<select id = "getBoardPet" resultType = "com.pet.pet.model.PetDTO">
		SELECT *
		FROM PET
		WHERE PET_NUM = #{petNum}
	</select>
	
	<select id = "getBoardUser" resultType = "com.pet.users.model.UsersDTO">
		SELECT *
		FROM MEMBER
		WHERE MEM_NUM = #{memNum}
	</select>
	
	
	<!-- 댓글 부르기 -->
	<select id = "getApply" resultType = "com.pet.apply.model.ApplyDTO">
		SELECT *
		FROM APPLY
		WHERE BOARD_NUM = #{boardNum}
	</select>
	
	<!-- 댓글쓰기 -->
	<insert id = "setApply">
		INSERT INTO APPLY (APPLY_NUM, MEM_NUM, APPLY_CONTENT, APPLY_DATE, BOARD_NUM) 
		VALUES(APPLY_SEQ.NEXTVAL, #{memNum}, #{applyContent}, CURRENT_TIMESTAMP, #{boardNum})
	</insert> 
	
	<delete id = "applyDelete">
		DELETE APPLY
		WHERE APPLY_NUM = #{applyNum}
	</delete>
	
	<!-- 글 지우기 -->
	<delete id = "deleteBoard">
		DELETE BOARD
		WHERE BOARD_NUM = #{boardNum}
	</delete>
	
	<!-- 글 수정 -->
	<update id = "updateBoard">
		UPDATE BOARD 
		SET BOARD_TITLE = #{boardTitle}, 
		BOARD_CONTENT = #{boardContent}, 
		PAY = #{pay}, 
		REGDATE = CURRENT_TIMESTAMP
		WHERE BOARD_NUM = #{boardNum}
	</update>
</mapper>
	
	
	
